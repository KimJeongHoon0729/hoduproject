<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper->DAO->DAOImpl->Service->ServiceImple->Controller -->

<mapper namespace="member"> <!-- DAO에서 접근할 이름 -->
	<!-- 조회 이름이 memberList 결과는 DTO(레코드) 단위 처리 -->
	<!-- member 테이블에서 아이디, 이름, 이메일, 등록 날짜를 이름으로 정렬해서 조회 -->
	<select id="memberList" resultType="com.spring.domain.MemberVO">
	<!-- SELECT 필드명, 필드명 FROM 테이블명 WHERE 조건 ORDER BY 정렬 -->
		SELECT userId, userName, userEmail, userRegdate FROM member ORDER BY userName
	</select>
	
	<!-- MemberVO 형식으로 값을 가져오는 걸 파라미터 형식으로 선언해준다. -->
	<insert id="memberInsert" parameterType="com.spring.domain.MemberVO"> <!-- id는 사용자가 임으로(JSP-Controller-mapper -->
	<!-- INSERT INTO 테이블명(필드명) VALUES (값) -->
	<!-- Form input -->	
	<!-- DTO에 저장된 값을 해당 필드에 입력 -->
		INSERT INTO member(userId, userPw, userName, userEmail)
		VALUES (#{userId},#{userPw},#{userName},#{userEmail})
	</insert>
	<!-- UPDATE 테이블명 SET 필드명=값, 필드명=값 WHERE 조건 -->
	<!-- DELETE FROM 테이블명 WHERE 조건 -->
	
	<!-- 개별조회 아이디를 입력받아서 해당 레코드를 조회 -->
	<select id="memberView" parameterType="String" resultType="com.spring.domain.MemberVO">
		SELECT userId, userPw, userName, userEmail FROM member WHERE userId = #{userId}
	</select>
	
	<!-- UPDATE 테이블명 SET 필드명=값, 필드명=값 WHERE 조건 -->
	<!-- DTO로 값을 전달 받아서 -->
	<update id="memberUpdate" parameterType="com.spring.domain.MemberVO">
		UPDATE member SET
			userPw=#{userPw},
			userName=#{userName},
			userEmail=#{userEmail}
		WHERE userId=#{userId}	
	</update>
	
	<!-- DELETE FROM 테이블명 WHERE 조건 -->
	<delete id="memberDelete" parameterType="String">
		DELETE FROM member WHERE userId=#{userId}
	</delete>
	
	
	
	
	
</mapper>





















